when a a function is declared as async, it will return a coroutine object.
A coroutine object needs to be awaited

async function_name ():
	...
	...
	data await <another_async_function_name>
	return data

asyncio.run(<function_name>)

example
=======
import asyncio
import aiofiles

async def read_file_contents(filename):
    filehandle = await aiofiles.open(filename,"r")
    data = await filehandle.read()
    return data

async def printdata(filename):
    data = await read_file_contents(filename)
    print(data)

asyncio.run (printdata("sampledata1.txt"))
